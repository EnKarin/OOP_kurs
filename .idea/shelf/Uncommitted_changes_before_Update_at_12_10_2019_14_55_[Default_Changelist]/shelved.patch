Index: src/Beings/Animals.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Beings;\r\n\r\nimport java.util.Random;\r\nimport java.util.Set;\r\n\r\nabstract class Animals extends Beings {\r\n\r\n    double speed;\r\n    boolean live = true;\r\n    boolean goal = false;\r\n    private double globalsin = 0, globalcos = 0;\r\n    final Random rand = new Random();\r\n\r\n    Animals(boolean male, double maxHp, int x, int y, double speed) {\r\n        super(male, maxHp, x, y);\r\n        this.speed = speed;\r\n    }\r\n\r\n    void movement() {\r\n        rand.setSeed(0);\r\n        if(rand.nextInt(30) == 1 || globalcos == 0){\r\n            globalcos = rand.nextFloat() / Float.MAX_VALUE;\r\n            globalsin = 1 - globalcos;\r\n        }\r\n        x += speed / 2 * globalcos;\r\n        y += speed / 2 * globalsin;\r\n    }\r\n\r\n    abstract void reproduction(Set<Beings> unit);\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Beings/Animals.java	(revision 8b247979367bbdecfe989c2964c8ffe5902ebbf0)
+++ src/Beings/Animals.java	(date 1570858005476)
@@ -7,8 +7,7 @@
 
     double speed;
     boolean live = true;
-    boolean goal = false;
-    private double globalsin = 0, globalcos = 0;
+    private double globalSin = 0, globalCos = 0;
     final Random rand = new Random();
 
     Animals(boolean male, double maxHp, int x, int y, double speed) {
@@ -18,12 +17,12 @@
 
     void movement() {
         rand.setSeed(0);
-        if(rand.nextInt(30) == 1 || globalcos == 0){
-            globalcos = rand.nextFloat() / Float.MAX_VALUE;
-            globalsin = 1 - globalcos;
+        if(rand.nextInt(30) == 1 || globalCos == 0){
+            globalCos = rand.nextFloat() / Float.MAX_VALUE;
+            globalSin = 1 - globalCos;
         }
-        x += speed / 2 * globalcos;
-        y += speed / 2 * globalsin;
+        x += speed / 2 * globalCos;
+        y += speed / 2 * globalSin;
     }
 
     abstract void reproduction(Set<Beings> unit);
Index: src/Main/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Main;\r\n\r\nimport java.awt.event.*;\r\nimport java.awt.*;\r\nimport javax.swing.*;\r\nimport java.util.*;\r\nimport java.util.concurrent.ConcurrentHashMap;\r\n\r\nimport Beings.*;\r\n\r\npublic class Main extends JFrame{\r\n    int x = 0, y = 0;\r\n    static Set<Beings> set = Collections.newSetFromMap(new ConcurrentHashMap<>());\r\n    private final Color red;\r\n\r\n    Main(){\r\n        setBounds(0, 0, 1370, 727);\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setVisible(true);\r\n        red = new Color(0xFF1109);\r\n\r\n        addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                super.keyTyped(e);\r\n                if(e.getKeyCode() == KeyEvent.VK_RIGHT && x < 1630 ){\r\n                    x+=50;\r\n                    repaint();\r\n                }\r\n                else if(e.getKeyCode() == KeyEvent.VK_LEFT && x > 0){\r\n                    x-= 50;\r\n                    repaint();\r\n                }\r\n                else if(e.getKeyCode() == KeyEvent.VK_UP && y > 0){\r\n                    y-=50;\r\n                    repaint();\r\n                }\r\n                else if(e.getKeyCode() == KeyEvent.VK_DOWN && y < 2273){\r\n                    y+=50;\r\n                    repaint();\r\n                }\r\n            }\r\n        });\r\n\r\n        while (true){\r\n            repaint(30, 0, 0, getWidth(), getHeight());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void paint(Graphics g) {\r\n        super.paint(g);\r\n\r\n        if(x == 0){\r\n            g.setColor(red);\r\n            g.drawLine(10, 0, 10, getHeight());\r\n        }\r\n        else if(x > 1630){\r\n            g.setColor(red);\r\n            g.drawLine(getWidth() - 10, 0, getWidth() - 10, getHeight());\r\n        }\r\n        if(y == 0){\r\n            g.setColor(red);\r\n            g.drawLine(1, 33, getWidth() - 1, 33);\r\n        }\r\n        else if(y > 2273){\r\n            g.setColor(red);\r\n            g.drawLine(0, getHeight() - 10 ,getWidth(), getHeight() - 10);\r\n        }\r\n        for(Beings temp: set){\r\n            if(!temp.live(set)){\r\n                set.remove(temp);\r\n            }\r\n            else if (temp.getX() > x && temp.getX() < getWidth() + x && temp.getY() > y && temp.getY() < getHeight() + y){\r\n                if(temp.getClass().equals(Plants.class)){\r\n                    if(temp.isMale()){\r\n                        g.setColor(new Color(50, 177, 24));\r\n                    }\r\n                    else{\r\n                        g.setColor(new Color(156, 255, 17, 221));\r\n                    }\r\n                }\r\n                else if(temp.getClass().equals(Herbivorous.class)){\r\n                    if(temp.isMale()){\r\n                        g.setColor(new Color(0x216D89));\r\n                    }\r\n                    else{\r\n                        g.setColor(new Color(0x85247385, true));\r\n                    }\r\n                }\r\n                else {\r\n                    if(temp.isMale()){\r\n                        g.setColor(new Color(0x7C1923));\r\n                    }\r\n                    else{\r\n                        g.setColor(new Color(0xAE7A282D, true));\r\n\r\n                    }\r\n                }\r\n                g.fillOval(temp.getX() - x, temp.getY() - y, (int)(temp.getCurrentHp() / 2), (int)(temp.getCurrentHp() / 2));\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Random rand = new Random();\r\n        rand.setSeed(2);\r\n        for(int i = 0; i < 300; i++){\r\n            set.add(new Plants(new Random().nextBoolean(), rand.nextInt(35), rand.nextInt(3000), rand.nextInt(3000)));\r\n        }\r\n        for(int i = 0; i < 100; i++){\r\n            set.add(new Herbivorous(new Random().nextBoolean(), rand.nextInt(50), rand.nextInt(3000), rand.nextInt(3000),\r\n                    rand.nextDouble() * 10000 / Double.MAX_VALUE + 1));\r\n        }\r\n        for(int i = 0; i < 100; i++){\r\n            set.add(new Carnivorous(new Random().nextBoolean(), rand.nextInt(65), rand.nextInt(3000), rand.nextInt(3000),\r\n                    rand.nextDouble() * 10000 / Double.MAX_VALUE + 2));\r\n        }\r\n\r\n        new Main();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Main/Main.java	(revision 8b247979367bbdecfe989c2964c8ffe5902ebbf0)
+++ src/Main/Main.java	(date 1570863305931)
@@ -70,6 +70,7 @@
         for(Beings temp: set){
             if(!temp.live(set)){
                 set.remove(temp);
+                System.out.println(set.size());
             }
             else if (temp.getX() > x && temp.getX() < getWidth() + x && temp.getY() > y && temp.getY() < getHeight() + y){
                 if(temp.getClass().equals(Plants.class)){
